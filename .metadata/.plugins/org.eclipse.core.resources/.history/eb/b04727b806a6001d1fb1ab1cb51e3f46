package pages;

import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import com.qa.util.BrowserActions;

public class CheckoutPage {
	
private WebDriver driver;
BrowserActions  browserActions= new BrowserActions();
	
	public  CheckoutPage(WebDriver driver)
	{
		this.driver=driver;
		PageFactory.initElements(driver, this);
		System.out.println("checkout page const"+driver);
	}
	
	@FindBy(css ="input#billing_first_name" )
	 WebElement firstName;
	@FindBy(css ="input#billing_last_name" )
	 WebElement lastName;
	@FindBy(css ="input#billing_company" )
	 WebElement companyNmae;
	@FindBy(css ="input#billing_email" )
	 WebElement emailAddress;
	@FindBy(css ="input#billing_phone" )
	 WebElement phone;
	@FindBy(css ="input#billing_address_1" )
	 WebElement billingAddress_1;
	@FindBy(css ="input#billing_city" )
	 WebElement city;
	@FindBy(css ="input#billing_postcode" )
	 WebElement postcode;
	@FindBy(css ="textarea.input-text")
	 WebElement orderNotes;
	@FindBy(css ="input#payment_method_cod")
	WebElement cashOnDelivery;
	@FindBy(xpath ="//*[@class='product-quantity']/parent::*")
	 WebElement yourOrerProduct;
	@FindBy(css ="td.product-name strong")
	 WebElement yourOrerProductQuantity;
	
	
	@FindBy(css ="p#billing_country_field  span.select2-arrow")
	 WebElement dropdownCountry;
	@FindBy(css ="span.select2-match")   ///    div.select2-result-label    ////span.select2-match
	 List<WebElement> dropdownCountryList;
	@FindBy(css ="div#s2id_billing_state span.select2-arrow")
	 WebElement dropdownState;
	@FindBy(css ="span.select2-match")
	List<WebElement> dropdownStateList;
	
	
	
	@FindBy(css ="input#place_order")
	 WebElement placeOrder;
	@FindBy(xpath ="//*[text()='Thank you. Your order has been received.']")
	 WebElement orderConfirmationText;
	
	
	public void getFillBillingDetailsText(String first_Name, String last_Name,String company_Nmae,String email_Address,String phoneNo,String billing_Address_1,String city_,String post_code,String order_Notes,String country1,String state1)
	{
		browserActions.type(firstName, first_Name);
		browserActions.type(lastName, last_Name);
		browserActions.type(companyNmae, company_Nmae);
		browserActions.type(emailAddress, email_Address);
		browserActions.type(phone, phoneNo);
		browserActions.type(billingAddress_1, billing_Address_1);
		browserActions.type(city, city_);
		browserActions.type(postcode, post_code);
		browserActions.type(orderNotes, order_Notes);
		getFillBillingDetailsDropdownCountry( country1);
		getFillBillingDetailsDropdownState( state1);
	}
	
	public void getFillBillingDetailsDropdownCountry(String country)
	{
		browserActions.click(driver, dropdownCountry);
		List<WebElement> dropdown=dropdownCountryList;
		
		
		for (int i=0; i<=dropdown.size();i++)
		{
			WebElement ddvalue = dropdown.get(i);
		//System.out.println(ddvalue.getText());	
		System.out.println(ddvalue.getAriaRole());	
		
			
		}
		
		
		
		
		
	/*	for(WebElement e: dropdown)
		{
			dropdown.get(5).getText();
			System.out.println(dropdown.get(5).getText() );
			//e.get
			System.out.println(e.getSize() );
			System.out.println(e );
			e.sendKeys(country) ;
			System.out.println(e.getText() );
			
			if (e.getText().equalsIgnoreCase(country))
			{
				System.out.println(e.getText()+"The value that is clicked" );
				e.click();
			}
			else 
			{
				System.out.println("The country dropdown value do not match");
			}
		}
		*/
		
	}
	public void getFillBillingDetailsDropdownState(String state)
	{
		browserActions.click(driver, dropdownState);
		List<WebElement> dropdown=(List<WebElement>) dropdownStateList;
		
		for(WebElement e: dropdown)
		{
			 
			System.out.println(e.getText() );
			
			if (e.getText().equalsIgnoreCase(state))
			{
				System.out.println(e.getText()+"The value that is clicked" );
				e.click();
			}
			else 
			{
				System.out.println("The country dropdown value do not match");
			}
		}
		
		
	}
	
	
	
	public String getPageTitle()
	{
	return 	browserActions.getTitle(driver);
	}
	
	public String getYourOrderProduct()
	{
		return yourOrerProduct.getText();
	}
	
	public String getYourOrderProductQuantity()
	{
		return yourOrerProductQuantity.getText();
		
	}

	public void getPlaceOrder()
	{
		placeOrder.click();
		try {
			Thread.sleep(1500);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
	}
	public void getCashOnDelivery() throws InterruptedException
	{
		Thread.sleep(1500);
		cashOnDelivery.click();
		Thread.sleep(1000);
	}
	public String getOrderConfirmationText()
	{
		return orderConfirmationText.getText();
	}
	
	
	
}
