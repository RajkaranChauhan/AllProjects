package stepDefinations;

import java.util.List;

import org.junit.Assert;

import com.qa.driverFactory.DriverFactory;
import com.qa.util.ConfigReader;

import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.And;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import pages.HomePage;
import pages.IndexPage;
import pages.MyAccountPage;
import pages.ShopPage;

public class ShopPageSteps {
	
	IndexPage indexPage= new IndexPage(DriverFactory.getDriver());
	MyAccountPage myAccountPage;
//	HomePage homePage;
	HomePage homePage= new HomePage(DriverFactory.getDriver());
private	ShopPage shopPage;
	ConfigReader  configReader;
/*	
	@Given("From index page the user is navigated to the MyAccount page.")
	public void from_index_page_the_user_is_navigated_to_the_my_account_page() {
		
		 configReader = new ConfigReader();
		  String URL=configReader.init_prop().getProperty("url");
		  DriverFactory.getDriver().get(URL);
		  myAccountPage=  indexPage.MyAccountPageNavigation();
	    
	}

	@Then("In My Account page user logged into the applicaton using credentials user name {string} and password {string} and lands in Home Page")
	public void in_my_account_page_user_logged_into_the_applicaton_using_credentials_user_name_and_password_and_lands_in_home_page(String user, String pass) {
	     
		homePage=	myAccountPage.HomePageNavigation(user, pass);
	}
*/
	@Then("From Home page user is navigated  to the Shop page")
	public void from_home_page_user_is_navigated_to_the_shop_page() throws Exception {
		System.out.println("user is here: from_home_page_user_is_navigated_to_the_shop_page");
			shopPage=homePage.shopPageNavigation();
		
	}

	@Given("user gets the title of Shop page")
	public void user_gets_the_title_of_Shop_page() {		
		System.out.println("The title of the shop page is: "+ shopPage.getPageTitle()); 
	     
	}

	@Then("verify the title of the Shop page is {string}")
	public void verify_the_title_of_the_Shop_page_is(String ExpectedTitleOfShopPage) {
		Assert.assertTrue(shopPage.getPageTitle().contains(ExpectedTitleOfShopPage));  
	     
	}

	@Then("verify there is a element called as {string}")
	public void verify_there_is_a_element_called_as(String expectedvalue) {
	     
		Assert.assertTrue(shopPage.getProductCategory().contains(expectedvalue)); 
	}

	@Given("user is on Shop page")
	public void user_is_on_shop_page() {
		
		System.out.println("The title of the shop page is: "+ shopPage.getPageTitle()); 
	}

	@Then("user adds three books in basket by clicking on button AddtoBasket")
	public void user_adds_three_books_in_basket_by_clicking_on_button_addto_basket(DataTable booksToOrder) {
		List<String> booksToOrderList = booksToOrder.asList();
		
		for(String s : booksToOrderList)
		{
		if (	s.contains("HTML5 WebApp Develpment"))
		{
			System.out.println("The book that is add to cart is HTML5 WebApp Develpment"  );
			shopPage.addtobasketHTML5WebAppDevelpment();
		}
		else if(s.contains("Mastering JavaScript"))
		{
			System.out.println("The book that is add to cart is Mastering JavaScript"  );
			shopPage.addtobasketMasteringJavaScript();
			
		}
		else
		{
			System.out.println("The book name do not match to add to cart");
		}
		 
		}
	     
	}

	@Then("verify the content of the shopping cart has {string}")
	public void verify_the_content_of_the_shopping_cart_has(String ExpectedCountOfItemsAdded) {
	System.out.println(shopPage.cartContentCount());
	Assert.assertTrue(shopPage.cartContentCount().contains(ExpectedCountOfItemsAdded));
	     
	}

	@Then("user navigates to the Basketpage by clicking on the cart icon")
	public void user_navigates_to_the_basketpage_by_clicking_on_the_cart_icon() {
	     
		shopPage.getViewBasket();
	}
	@And("verify the title of the Basket page is {string}")
	public void verify_the_title_of_the_Basket_page_is(String ExpectedTitleOfBasketPage) {
		Assert.assertTrue(shopPage.getPageTitle().contains(ExpectedTitleOfBasketPage));  
	     
	}

}
